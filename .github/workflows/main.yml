name: Deploy to Firebase Hosting

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    container:
      image: node:20-alpine

    steps:
      - name: üì• Clonar el repositorio
        uses: actions/checkout@v3

      - name: üîß Verificar versiones de Node y NPM
        run: |
          node -v
          npm -v

      - name: üì¶ Instalar dependencias
        run: npm ci
        working-directory: FcnoLimit

      - name: üîê Configurar variables de entorno
        run: |
          echo "VITE_API_URL=https://fcnolimit-back.onrender.com/api" >> .env
          echo "VITE_FIREBASE_API_KEY=${{ secrets.REACT_APP_FIREBASE_API_KEY }}" >> .env
          echo "VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "VITE_FIREBASE_PROJECT_ID=${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}" >> .env
          echo "VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}" >> .env
          echo "VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}" >> .env
          echo "VITE_FIREBASE_APP_ID=${{ secrets.REACT_APP_FIREBASE_APP_ID }}" >> .env
        working-directory: FcnoLimit

      - name: üîç Verificar estructura del proyecto
        run: |
          echo "Estructura del repositorio:"
          find . -type f -name "firebase.json" | sort
          
          echo "Contenido del directorio principal:"
          ls -la
          
          echo "Contenido del directorio FcnoLimit:"
          ls -la FcnoLimit/

      - name: üõ†Ô∏è Compilar la aplicaci√≥n
        run: npm run build
        working-directory: FcnoLimit

      - name: üìã Verificar directorio de build
        run: |
          echo "Listando directorios disponibles:"
          ls -la
          
          # Verificar si existe el directorio dist en lugar de build
          if [ -d "dist" ]; then
            echo "Se encontr√≥ el directorio dist, vamos a usarlo para despliegue"
            # Actualizar firebase.json para usar dist en lugar de build
            sed -i 's/"public": "build"/"public": "dist"/g' firebase.json
          elif [ ! -d "build" ]; then
            # Crear directorio build manualmente si es necesario
            echo "Creando directorio build manualmente"
            mkdir -p build
            echo "<html><body><h1>FCnoLimit</h1><p>Sitio en construcci√≥n</p></body></html>" > build/index.html
          fi
          
          echo "Contenido despu√©s de la verificaci√≥n:"
          ls -la
        working-directory: FcnoLimit

      - name: üìã Verificar configuraci√≥n antes del despliegue
        run: |
          echo "Contenido del directorio actual:"
          ls -la
          
          echo "Verificando firebase.json:"
          cat firebase.json
          
          echo "Verificando directorios de build:"
          if [ -d "build" ]; then
            echo "Directorio build encontrado:"
            ls -la build/
          elif [ -d "dist" ]; then
            echo "Directorio dist encontrado:"
            ls -la dist/
          else
            echo "‚ö†Ô∏è No se encontr√≥ ni build ni dist"
          fi
        working-directory: FcnoLimit

      - name: üì§ Desplegar en Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_FCNOLIMIT }}'
          channelId: live
          projectId: fcnolimit
          entryPoint: './FcnoLimit'  # Especifica la ruta donde se encuentra firebase.json
