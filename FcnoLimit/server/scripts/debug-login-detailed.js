// Script para debuggear por qu√© funciona en create-test-user pero no en test-frontend-refresh
require('dotenv').config();

const BASE_URL = 'https://fcnolimit-back.onrender.com/api';

const TEST_USER = {
  correo: 'test.refresh.1750397295395@fcnolimit.test',
  contrase√±a: 'TestRefresh123!'
};

async function makeRequest(url, options = {}) {
  try {
    console.log(`üîó Haciendo request a: ${url}`);
    console.log(`üì¶ M√©todo: ${options.method || 'GET'}`);
    console.log(`üìù Body: ${options.body || 'Sin body'}`);
    console.log(`üîß Headers: ${JSON.stringify(options.headers || {})}`);
    
    const response = await fetch(url, {
      headers: {
        'Content-Type': 'application/json',
        ...options.headers
      },
      ...options
    });

    console.log(`üì° Response status: ${response.status}`);
    console.log(`üìã Response headers: ${JSON.stringify(Object.fromEntries(response.headers.entries()))}`);
    
    let data;
    try {
      const text = await response.text();
      console.log(`üìÑ Response text: ${text.substring(0, 500)}...`);
      data = JSON.parse(text);
    } catch (parseError) {
      console.log(`‚ùå Error parsing JSON: ${parseError.message}`);
      data = { error: 'Respuesta no es JSON v√°lido' };
    }
    
    return { success: response.ok, data, status: response.status };
  } catch (error) {
    console.log(`‚ùå Error de conexi√≥n: ${error.message}`);
    return { success: false, error: error.message };
  }
}

async function debugLogin() {
  console.log('üîç === DEBUG DETALLADO DEL LOGIN ===\n');

  console.log('üìã Datos del usuario de prueba:');
  console.log(`   Email: ${TEST_USER.correo}`);
  console.log(`   Password: ${TEST_USER.contrase√±a}`);
  console.log(`   Password length: ${TEST_USER.contrase√±a.length}`);
  console.log(`   Email length: ${TEST_USER.correo.length}`);

  console.log('\n1Ô∏è‚É£ Intentando login paso a paso...');
  
  const result = await makeRequest(`${BASE_URL}/usuarios/login`, {
    method: 'POST',
    body: JSON.stringify(TEST_USER)
  });

  console.log('\nüìä Resultado final:');
  console.log(`   Success: ${result.success}`);
  console.log(`   Status: ${result.status}`);
  console.log(`   Data: ${JSON.stringify(result.data, null, 2)}`);

  if (!result.success) {
    console.log('\nüîç An√°lisis del error:');
    
    // Verificar si el usuario a√∫n existe
    console.log('\n2Ô∏è‚É£ Verificando si el usuario a√∫n existe...');
    
    // Como no tenemos endpoint para verificar directamente, intentemos con credenciales incorrectas
    const wrongPasswordTest = await makeRequest(`${BASE_URL}/usuarios/login`, {
      method: 'POST',
      body: JSON.stringify({
        correo: TEST_USER.correo,
        contrase√±a: 'contrase√±a_incorrecta'
      })
    });
    
    console.log(`   Test con contrase√±a incorrecta - Status: ${wrongPasswordTest.status}`);
    console.log(`   Error: ${wrongPasswordTest.data?.error}`);
    
    if (wrongPasswordTest.status === 401) {
      console.log('   ‚úÖ El usuario existe (error 401 con contrase√±a incorrecta)');
    } else if (wrongPasswordTest.status === 500) {
      console.log('   ‚ùå Error 500 tambi√©n con contrase√±a incorrecta - problema del servidor');
    }

    // Verificar headers
    console.log('\n3Ô∏è‚É£ Verificando headers de la request...');
    const testHeaders = await makeRequest(`${BASE_URL}/usuarios/login`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'User-Agent': 'Test-Debug-Script/1.0'
      },
      body: JSON.stringify(TEST_USER)
    });
    
    console.log(`   Test con headers espec√≠ficos - Status: ${testHeaders.status}`);
  }

  console.log('\nüìã === FIN DEL DEBUG ===');
}

// Ejecutar debug
debugLogin().catch(console.error);
