name: Deploy to Firebase Hosting

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    # Permite ejecutar el workflow manualmente desde la interfaz de GitHub

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
<<<<<<< HEAD
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: FcnoLimit/package-lock.json
=======
          node-version: '20'
>>>>>>> fc5d633a37713eccd3b4f5eff7693d2212a0dd9d
          
      - name: Install dependencies
        run: npm ci
        working-directory: FcnoLimit
        
      - name: Configure environment variables
        run: |
          echo "REACT_APP_FIREBASE_API_KEY=${{ secrets.REACT_APP_FIREBASE_API_KEY }}" >> .env
          echo "REACT_APP_FIREBASE_AUTH_DOMAIN=${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "REACT_APP_FIREBASE_PROJECT_ID=${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}" >> .env
          echo "REACT_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}" >> .env
          echo "REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}" >> .env
          echo "REACT_APP_FIREBASE_APP_ID=${{ secrets.REACT_APP_FIREBASE_APP_ID }}" >> .env
        working-directory: FcnoLimit
        
      - name: Build
        run: npm run build
        working-directory: FcnoLimit
        
      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_FCNOLIMIT }}'
          channelId: live
          projectId: fcnolimit
          entryPoint: FcnoLimit
        # Si es un PR, se despliega en un canal de previsualizaci√≥n
        # Si es un push a main, se despliega al canal en vivo